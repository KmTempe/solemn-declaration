services:
  web:
    build: .
    container_name: L7SubmitForm_Prod
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    env_file:
      - .env.production
    volumes:
      - ${APP_LOGS_PATH:-./production-data/logs}:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: L7Redis_Prod
    restart: unless-stopped
    env_file:
      - .env.production
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10
    volumes:
      - ${REDIS_DATA_PATH:-./production-data/RedisData}:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  mongodb:
    image: mongo:7.0
    container_name: L7MongoDB_Prod
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: solemn_declarations
    volumes:
      - ${MONGODB_DATA_PATH:-./production-data/MongoDB}:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Optional: Nginx reverse proxy for SSL termination
  nginx:
    image: nginx:alpine
    container_name: L7Nginx_Prod
    ports:
      - "443:443"
    volumes:
      - ${NGINX_CONFIG_PATH:-./production-data/nginx}/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${NGINX_SSL_PATH:-./production-data/ssl}:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped
    profiles:
      - ssl
    networks:
      - app-network

# Removed named volumes - now using direct bind mounts
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
